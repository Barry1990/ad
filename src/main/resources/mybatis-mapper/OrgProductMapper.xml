<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.gxq.mapper.OrgProductMapper">

    <select id="selectByModel" parameterType="OrgProductModel" resultMap="orgProductMap">
        SELECT * FROM t_product_scale WHERE org_id = #{orgId} AND product_id = #{productId}
    </select>

    <insert id="insert" parameterType="OrgProductModel" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO t_product_scale(
              product_id ,
              org_id ,
              wxthird_scale ,
              alithird_scale ,
              create_one ,
              create_time
        )
        VALUES (
              #{productId},
              #{orgId},
              #{wxthirdScale},
              #{alithirdScale},
              #{createOne},
              SYSDATE()
        )
    </insert>

    <update id="update" parameterType="OrgProductModel">
        UPDATE t_product_scale
        SET
          <if test="wxthirdScale!=null">  wxthird_scale = #{wxthirdScale},   </if>
          <if test="alithirdScale!=null"> alithird_scale = #{alithirdScale}, </if>
          <if test="updateOne!=null">  update_one = #{updateOne},   </if>
          update_time = SYSDATE()
        WHERE org_id = #{orgId}
          AND product_id = #{productId}
    </update>

    <insert id="insertHistory" parameterType="OrgProductModel">
        INSERT INTO t_product_scale_his(
            product_id ,
            org_id ,
            wxthird_scale ,
            alithird_scale ,
            create_one ,
            create_time ,
            is_history
        ) SELECT
            t.product_id ,
            t.org_id ,
            t.wxthird_scale ,
            t.alithird_scale ,
            t.create_one ,
            t.create_time ,
            0
        FROM
            t_product_scale t
        WHERE
            t.org_id = #{orgId} AND t.product_id = #{productId}
    </insert>

    <update id="updateHistory" parameterType="OrgProductModel">
        UPDATE t_product_scale_his
        SET
        <if test="createOne!=null">  update_one = #{createOne},   </if>
        update_time = SYSDATE(),
        is_history = 1
        WHERE org_id = #{orgId} AND product_id = #{productId}
    </update>

    <select id="selectOrgProcuct" parameterType="OrgSettingSearchModel" resultMap="orgProductMap">
        SELECT ttt.* from
        (SELECT  tt.*,
            ps.wxthird_scale,
            ps.alithird_scale
             FROM
            (SELECT DISTINCT
                t.product_id ,
                t.pos_name as product_name,
                o.id AS org_id ,
                o.`name` AS org_name,
                (SELECT count(DISTINCT a.machine_code)
                   from sto_position_vs_obj a ,machine am
                  where a.product_id = t.product_id and a.machine_code = am.machine_code
                    and o.id = am.org_id
                    and a.del_flg = 0
                ) as machine_count,
                (SELECT count(DISTINCT b.box)
                   from sto_position_vs_obj b ,machine bm
                  where b.product_id = t.product_id and b.machine_code = bm.machine_code
                    and o.id = bm.org_id
                    and b.del_flg = 0
                ) as box_count
            FROM
                sto_position_vs_obj t ,
                machine m ,
                organization o
            WHERE
                t.machine_code = m.machine_code
                AND t.del_flg = 0
                AND m.org_id = o.id
                AND o.type = 1
                AND FIND_IN_SET(o.id , getOrgChildren(#{orgId}))
                <if test="orgName!=null"> AND o.name LIKE #{orgName} </if>
            ) tt
         LEFT JOIN t_product_scale ps
            ON tt.product_id = ps.product_id
               AND tt.org_id = ps.org_id) ttt
        WHERE 1 = 1
        <if test="isSetting!=null and isSetting==1">AND ttt.wxthird_scale IS NOT NULL AND ttt.alithird_scale IS NOT NULL </if>
        <if test="isSetting!=null and isSetting==2">AND ttt.wxthird_scale IS NULL OR ttt.alithird_scale IS NULL</if>
    </select>

    <select id="selectAlreadyCount" parameterType="OrgSettingSearchModel" resultType="java.lang.Long">
        SELECT COUNT(1) from
        (SELECT  tt.*,
            ps.wxthird_scale,
            ps.alithird_scale
             FROM
            (SELECT DISTINCT
                t.product_id ,
                t.pos_name as product_name,
                o.id AS org_id ,
                o.`name` AS org_name,
                (SELECT count(DISTINCT a.machine_code)
                   from sto_position_vs_obj a ,machine am
                  where a.product_id = t.product_id and a.machine_code = am.machine_code
                    and o.id = am.org_id
                    and a.del_flg = 0
                ) as machine_count,
                (SELECT count(DISTINCT b.box)
                   from sto_position_vs_obj b ,machine bm
                  where b.product_id = t.product_id and b.machine_code = bm.machine_code
                    and o.id = bm.org_id
                    and b.del_flg = 0
                ) as box_count
            FROM
                sto_position_vs_obj t ,
                machine m ,
                organization o
            WHERE
                t.machine_code = m.machine_code
                AND t.del_flg = 0
                AND m.org_id = o.id
                AND o.type = 1
                AND FIND_IN_SET(o.id , getOrgChildren(#{orgId}))
                <if test="orgName!=null"> AND o.name LIKE #{orgName} </if>
        ) tt
         LEFT JOIN t_product_scale ps
            ON tt.product_id = ps.product_id
               AND tt.org_id = ps.org_id) ttt
               WHERE ttt.wxthird_scale IS NOT NULL AND ttt.alithird_scale IS NOT NULL
    </select>


    <resultMap type="com.gxq.model.OrgProductModel" id="orgProductMap">
        <id property="orgId" column="org_id"/>
        <result property="orgName" column="org_name"/>
        <result property="productId" column="product_id"/>
        <result property="productName" column="product_name"/>
        <result property="wxthirdScale" column="wxthird_scale"/>
        <result property="alithirdScale" column="alithird_scale"/>
        <result property="machineCount" column="machine_count"/>
        <result property="boxCount" column="box_count"/>
    </resultMap>

</mapper>