<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.gxq.mapper.OrderMapper">

    <insert id="insertOrderStatus" parameterType="java.lang.String">
        <![CDATA[

        INSERT INTO t_order_status(
            order_id ,
            wx_account ,
            ali_account ,
            pay_channel ,
            wx_scale ,
            ali_scale ,
            price ,
            pay_date,
            status
        )

        SELECT
            tt.order_id,tt.wx_account,tt.ali_account,tt.pay_channel,tt.wxthird_scale,tt.alithird_scale,

                CASE WHEN tt.pay_channel = 2 THEN (tt.pay_price * tt.wxthird_scale /10000.00)
                     WHEN tt.pay_channel = 3 THEN (tt.pay_price * tt.alithird_scale /10000.00)
                 END AS  price,

                 CASE
                WHEN tt.period_type = 1 THEN
                    date_add(
                        tt.update_date ,
                        INTERVAL tt.period_time DAY
                    )
                WHEN tt.period_type = 2 and extract(DAY FROM last_day(date_format(date_add(tt.update_date,interval 1 month),'%Y-%m-%d'))) >= tt.period_time  THEN
                    date_add(
                        date_add(tt.update_date , INTERVAL 1 MONTH) ,
                        INTERVAL (tt.period_time - extract(DAY FROM tt.update_date)) DAY
                    )
                 WHEN tt.period_type = 2 and  extract(DAY FROM last_day(date_format(date_add(tt.update_date,interval 1 month),'%Y-%m-%d'))) < tt.period_time  THEN
                    date_add(
                        date_add(tt.update_date , INTERVAL 1 MONTH) ,
                        INTERVAL (extract(DAY FROM last_day(date_format(date_add(tt.update_date,interval 1 month),'%Y-%m-%d'))) - extract(DAY FROM tt.update_date)) DAY
                    )
                END AS pay_date,
                0

        FROM
            (
                SELECT
                    t.order_id ,
                    t.org_id ,
                    t.product_id ,
                    t.pay_price ,
                    t.pay_channel ,
                    t.update_date ,
                    s.wx_account ,
                    s.ali_account ,
                    s.period_type,
                    s.period_time,
                    ps.alithird_scale ,
                    ps.wxthird_scale
                FROM
                    (
                        SELECT
                            b.order_id ,
                            b.pay_price ,
                            m.org_id ,
                            b.product_id ,
                            b.update_date ,
                            b.pay_channel
                        FROM
                            business_order b ,
                            machine m
                        WHERE
                            DATE_FORMAT(b.update_date , '%Y-%m-%d') = #{serverDate}
                        AND b.`status` = 4
                        AND m.machine_code = b.machine_code
                        AND b.pay_channel IN(2 , 3)
                    ) t
                LEFT JOIN t_org_setting s ON t.org_id = s.org_id
                LEFT JOIN t_product_scale ps ON ps.org_id = t.org_id
                AND ps.product_id = t.product_id
            ) tt
            WHERE  tt.wx_account IS NOT NULL
              AND  tt.ali_account IS NOT NULL
              AND  tt.period_type IS NOT NULL
              AND  tt.period_time IS NOT NULL
              AND  tt.alithird_scale IS NOT NULL
              AND  tt.wxthird_scale IS NOT NULL

    ]]>
    </insert>

</mapper>